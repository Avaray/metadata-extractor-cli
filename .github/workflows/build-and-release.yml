name: Build and Release

on:
  workflow_dispatch:
  push:
    paths:
      - '**.csproj'
      - 'Program.cs'
      - 'packages.lock.json'
      - 'icon.ico'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64] # [x64, x86]

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Get version from csproj file
      - name: Get version
        id: version
        run: echo ::set-output name=version::$(grep -oPm1 "(?<=<Version>)[^<]+" ./Extractor/Extractor.csproj)

      - name: Tag version
        run: git tag ${{ steps.version.outputs.version }}

      - name: Push tag
        run: git push origin ${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.DYGNITORZ_TOKEN }}

      - name: Install dependencies
        run: dotnet restore

      - name: Publish single file executable
        run: dotnet publish -c Release -p:PublishSingleFile=true -p:DebugType=none -o ./publish/${{ matrix.os }}-${{ matrix.arch }}

      - name: List files
        run: ls -R ./publish

      - name: Create Release Artifact
        run: |
          cd ./publish/${{ matrix.os }}-${{ matrix.arch }}
          zip release-${{ matrix.os }}-${{ matrix.arch }}-${{ steps.version.outputs.version }}.zip *

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: ./publish/${{ matrix.os }}-${{ matrix.arch }}/release-${{ matrix.os }}-${{ matrix.arch }}-${{ steps.version.outputs.version }}.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./publish/${{ matrix.os }}-${{ matrix.arch }}/release-${{ matrix.os }}-${{ matrix.arch }}-${{ steps.version.outputs.version }}.zip
          token: ${{ secrets.DYGNITORZ_TOKEN }}
          body: |
            Release ${{ steps.version.outputs.version }}

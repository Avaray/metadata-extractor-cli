name: Build and Release

on:
  workflow_dispatch:
  push:
    paths:
      - '**.csproj'
      - 'Program.cs'
      - 'packages.lock.json'
      - 'icon.ico'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64] # [x64, x86]

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Get Project Version
        id: version
        run: echo ::set-output name=version::$(grep -oPm1 "(?<=<Version>)[^<]+" ./metadata-extractor-cli.csproj)

      - name: Configure Git
        run: |
          git config user.name ${{ secrets.DYGNITORZ_NAME }}
          git config user.email ${{ secrets.DYGNITORZ_EMAIL }}

      - name: Tag version
        run: git tag ${{ steps.version.outputs.version }}

      - name: Display some stuff
        run: |
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Ref: ${{ github.ref }}"
          echo "Current directory: $PWD"

      - name: Install dependencies
        run: dotnet restore

      - name: Publish single file executable
        run: dotnet publish -c Release -p:PublishSingleFile=true -p:DebugType=none -o ./publish/${{ matrix.os }}-${{ matrix.arch }}

      - name: Create Release Artifact
        run: |
          cd ./publish/${{ matrix.os }}-${{ matrix.arch }}
          zip release-${{ matrix.os }}-${{ matrix.arch }}.zip *

      - name: List files
        run: ls -R ./publish

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: ./publish/${{ matrix.os }}-${{ matrix.arch }}/release-${{ matrix.os }}-${{ matrix.arch }}.zip

      - name: List files
        run: ls -R

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./publish/${{ matrix.os }}-${{ matrix.arch }}/release-${{ matrix.os }}-${{ matrix.arch }}.zip
          tag_name: ${{ steps.version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Release ${{ steps.version.outputs.version }}
